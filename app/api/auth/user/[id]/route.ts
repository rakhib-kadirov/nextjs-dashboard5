import { NextResponse } from "next/server";
import { db } from "@/app/lib/db";

export async function GET(request: Request) {
    try {
        // const { searchParams } = new URL(request.url)
        // if (!params?.params?.id) {
        //     return NextResponse.json({ success: false, error: "ID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω" }, { status: 400 });
        // }

        const url = new URL(request.url);
        const id = url.pathname.split("/").pop(); // –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç –ø—É—Ç–∏
        console.log("–ü–æ–ª—É—á–µ–Ω ID –∏–∑ URL:", id); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ id –ø–æ–ª—É—á–µ–Ω
        // console.log("SESSION:", session)
        // if (!session || !session.user) {
        //     return NextResponse.json({ success: false, error: "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" }, { status: 401 });
        // }
        // return NextResponse.json({ success: true, user: session?.user });
        const sql = "SELECT * FROM users WHERE id = ?"
        const [users] = await db.query(sql, [id])
        return NextResponse.json({ users: users })

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
        return NextResponse.json({ success: false, error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞." }, { status: 500 });
    }
}

// export default async function handler(req: NextApiRequest, res: NextApiResponse) {
//     const { id } = req.query;
//     const session = await auth()
//     console.log("üîç ID –∏–∑ –∑–∞–ø—Ä–æ—Å–∞:", id); // –õ–æ–≥–∏—Ä—É–µ–º ID, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Ö–æ–¥–∏—Ç

//     if (!id) {
//         return res.status(400).json({ error: "ID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω" });
//     }

//     try {
//         const sql = "SELECT * FROM users WHERE id = ?"
//         const [user] = await db.query(sql, [session.user.id])
//         console.log("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –±–∞–∑—ã:", user); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç

//         if (!user) {
//             return res.status(404).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
//         }

//         return res.status(200).json(user);
//     } catch (error) {
//         console.error("‚ùå –û—à–∏–±–∫–∞ API:", error);
//         return res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
//     }
// }